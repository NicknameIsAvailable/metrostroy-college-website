[{"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\index.js":"1","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\App.js":"2","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Header\\Header.jsx":"3","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Footer\\Footer.jsx":"4","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Profile\\Profile.jsx":"5","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\ScheduleEdit.jsx":"6","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ErrorPage\\ErrorPage.jsx":"7","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\AdminPanel\\AdminPanel.jsx":"8","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\axios.js":"9","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Schedule.jsx":"10","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\BurgerMenu\\BurgerMenu.jsx":"11","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\Components\\AdminMenu\\AdminMenu.jsx":"12","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\AdminPanel\\Components\\Tab\\Tab.jsx":"13","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Login\\Login.jsx":"14","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Alert\\Alert.jsx":"15","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Redux\\storage.js":"16","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Redux\\Slices\\schedule.js":"17","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Redux\\Slices\\auth.js":"18","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\StrangeError\\StrangeError.jsx":"19","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\SchedulePage.jsx":"20","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\TeachersList\\TeachersList.jsx":"21","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEditTutorial\\ScheduleEditTutorial.jsx":"22","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Users.jsx":"23","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Loader\\Loader.jsx":"24","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\AutoComplete\\AutoComplete.jsx":"25","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Profile\\Components\\Lesson\\Lesson.jsx":"26","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\TeachersList\\Components\\Teacher\\Teacher.jsx":"27","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\Components\\UploaderModal\\UploaderModal.jsx":"28","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Components\\User\\User.jsx":"29","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Components\\CreateUserModal\\CreateUserModal.jsx":"30","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Components\\DeleteModal\\DeleteModal.jsx":"31","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Components\\GroupsList\\GroupsList.jsx":"32","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Components\\Search\\Search.jsx":"33","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\DropDownList\\DropDownList.jsx":"34","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\TeachersList\\Components\\TeacherLesson\\TeacherLesson.jsx":"35","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Components\\Cell\\Cell.jsx":"36","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Switch\\Switch.jsx":"37","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\Components\\NewElementsListModal\\NewElementsListModal.jsx":"38","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Notification\\Notification.jsx":"39"},{"size":471,"mtime":1684949331190,"results":"40","hashOfConfig":"41"},{"size":1892,"mtime":1688625157191,"results":"42","hashOfConfig":"41"},{"size":2678,"mtime":1688624871914,"results":"43","hashOfConfig":"41"},{"size":3624,"mtime":1683697612521,"results":"44","hashOfConfig":"41"},{"size":9989,"mtime":1686234536038,"results":"45","hashOfConfig":"41"},{"size":9390,"mtime":1688996196471,"results":"46","hashOfConfig":"41"},{"size":480,"mtime":1683697612603,"results":"47","hashOfConfig":"41"},{"size":2841,"mtime":1686049052748,"results":"48","hashOfConfig":"41"},{"size":173,"mtime":1686146707401,"results":"49","hashOfConfig":"41"},{"size":3906,"mtime":1688985045791,"results":"50","hashOfConfig":"41"},{"size":2090,"mtime":1684482253950,"results":"51","hashOfConfig":"41"},{"size":8235,"mtime":1688998516592,"results":"52","hashOfConfig":"41"},{"size":1343,"mtime":1680590959253,"results":"53","hashOfConfig":"41"},{"size":4610,"mtime":1684327692535,"results":"54","hashOfConfig":"41"},{"size":907,"mtime":1682757981358,"results":"55","hashOfConfig":"41"},{"size":294,"mtime":1684242947748,"results":"56","hashOfConfig":"41"},{"size":1459,"mtime":1686147634759,"results":"57","hashOfConfig":"41"},{"size":1402,"mtime":1684950491213,"results":"58","hashOfConfig":"41"},{"size":1339,"mtime":1683697612553,"results":"59","hashOfConfig":"41"},{"size":2300,"mtime":1686146419942,"results":"60","hashOfConfig":"41"},{"size":2574,"mtime":1684320782532,"results":"61","hashOfConfig":"41"},{"size":3360,"mtime":1686049052827,"results":"62","hashOfConfig":"41"},{"size":8402,"mtime":1684248657989,"results":"63","hashOfConfig":"41"},{"size":1145,"mtime":1683697612545,"results":"64","hashOfConfig":"41"},{"size":883,"mtime":1684320775492,"results":"65","hashOfConfig":"41"},{"size":1300,"mtime":1683697612619,"results":"66","hashOfConfig":"41"},{"size":2007,"mtime":1683697612699,"results":"67","hashOfConfig":"41"},{"size":1669,"mtime":1683697612679,"results":"68","hashOfConfig":"41"},{"size":3520,"mtime":1683697612727,"results":"69","hashOfConfig":"41"},{"size":2886,"mtime":1684218001178,"results":"70","hashOfConfig":"41"},{"size":1701,"mtime":1683697612719,"results":"71","hashOfConfig":"41"},{"size":3186,"mtime":1690368012924,"results":"72","hashOfConfig":"41"},{"size":2879,"mtime":1688559185382,"results":"73","hashOfConfig":"41"},{"size":906,"mtime":1683697612513,"results":"74","hashOfConfig":"41"},{"size":1098,"mtime":1683697612703,"results":"75","hashOfConfig":"41"},{"size":6720,"mtime":1688985338251,"results":"76","hashOfConfig":"41"},{"size":430,"mtime":1683697612559,"results":"77","hashOfConfig":"41"},{"size":910,"mtime":1688377932752,"results":"78","hashOfConfig":"41"},{"size":678,"mtime":1688998516608,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"13c7xkj",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"83"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"83"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"83"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"83"},"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\index.js",[],[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\App.js",["213"],[],"import React, {useEffect} from \"react\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./Components/Header/Header\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport ErrorPage from \"./Pages/ErrorPage/ErrorPage\";\r\nimport StrangeError from \"./Components/StrangeError/StrangeError\";\r\n\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport SchedulePage from \"./Pages/Schedule/SchedulePage\";\r\nimport TeachersList from \"./Pages/TeachersList/TeachersList\";\r\nimport ScheduleEdit from \"./Pages/ScheduleEdit/ScheduleEdit\";\r\nimport ScheduleEditTutorial from \"./Pages/ScheduleEditTutorial/ScheduleEditTutorial\";\r\nimport AdminPanel from \"./Pages/AdminPanel/AdminPanel\";\r\nimport Users from \"./Pages/Users/Users\";\r\nimport Login from \"./Pages/Login/Login\";\r\n\r\nfunction App() {\r\n\r\n    const userData = window.localStorage.getItem(\"userData\");\r\n\r\n    useEffect(() => {\r\n        if (!userData) {\r\n            return <Navigate to=\"/login\"/>\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <Routes>\r\n                <Route path=\"/\" element={<Profile />} />\r\n                <Route path=\"/admin\" element={<AdminPanel />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/schedule\" element={<SchedulePage />} />\r\n                <Route path=\"/teachers\" element={<TeachersList />} />\r\n                <Route path=\"/users/:type\" element={<Users />} />\r\n                <Route path=\"/schedule-edit/tutorial\" element={<ScheduleEditTutorial />} />\r\n                <Route path=\"/schedule-edit\" element={<ScheduleEdit />} />\r\n                <Route path=\"/error\" element={<StrangeError />} />\r\n                <Route path=\"/*\" element={<ErrorPage />} />\r\n            </Routes>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Header\\Header.jsx",["214"],[],"import React, {useState, useEffect} from 'react';\r\nimport \"./Header.css\";\r\nimport {ReactComponent as Logo} from \"../../Icons/Logo.svg\";\r\nimport {ReactComponent as PersonIcon} from \"../../Icons/Person.svg\";\r\nimport {ReactComponent as BurgerIcon} from \"../../Icons/Burger.svg\";\r\nimport LeftBuilding from \"../../Images/LeftBuilding.png\";\r\nimport RightBuilding from \"../../Images/RightBuilding.png\";\r\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [headerHidden, setHeaderHidden] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const scrollPos = window.pageYOffset;\r\n            setHeaderHidden(prevScrollPos => prevScrollPos > scrollPos);\r\n        };\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <header className={headerHidden ? \"header-hidden\" : \"\"}>\r\n            <BurgerMenu open={open} setOpen={setOpen}/>\r\n            <div className=\"main\">\r\n                <img\r\n                    src={LeftBuilding}\r\n                    alt=\"Левый чертеж\"\r\n                    className=\"leftBuilding\"\r\n                />\r\n                <div className=\"main__section\">\r\n                    <a href=\"https://www.colm.spb.ru/\">\r\n                        <Logo className=\"Logo\"/>\r\n                    </a>\r\n                    <div className=\"header-buttons\">\r\n                        <Link to=\"/\">\r\n                            <button>\r\n                                <PersonIcon className=\"icon\"/>\r\n                            </button>\r\n                        </Link>\r\n                        <button className=\"burger-btn\" onClick={() => setOpen(true)}>\r\n                            <BurgerIcon className=\"icon\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <img\r\n                    src={RightBuilding}\r\n                    alt=\"Правый чертеж\"\r\n                    className=\"rightBuilding\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"links\">\r\n                <div className=\"links__section\">\r\n                    <Link to=\"/schedule\">расписание</Link>\r\n                    <a href=\"https://colm.spb.ru/students\">обучающимся</a>\r\n                    <a href=\"https://colm.spb.ru/news\">наши новости</a>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Footer\\Footer.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Profile\\Profile.jsx",["215","216","217"],[],"import React, {useState, useEffect} from 'react';\r\nimport \"./Profile.css\";\r\nimport Loader from '../../Components/Loader/Loader';\r\nimport easterEgg from \"../../Images/картинка без которой ничего не будет работать.jpg\";\r\nimport Lesson from './Components/Lesson/Lesson';\r\nimport {Link, Navigate} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchSchedule, selectSchedule} from \"../../Redux/Slices/schedule\";\r\nimport {selectIsAuth} from \"../../Redux/Slices/auth\";\r\nimport axios from \"../../axios\";\r\n\r\nconst Profile = () => {\r\n\r\n    const isAuth = useSelector(selectIsAuth);\r\n    const [userData, setUserData] = useState({})\r\n    const [scheduleData, setScheduleData] = useState();\r\n    const [avaClicks, setAvaClicks] = useState(0);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(() => {\r\n        setUserData(JSON.parse(window.localStorage.getItem('userData')));\r\n    }, []);\r\n\r\n    // Объявление переменных состояния и функций\r\n    const dispatch = useDispatch();\r\n    const schedule = useSelector(selectSchedule);\r\n\r\n    const isLoading = schedule.status === 'loading'\r\n\r\n    // Запускать функцию fetchSchedule при загрузке страницы\r\n\r\n    const getSchedule = async () => {\r\n        const data = await dispatch(fetchSchedule());\r\n        setScheduleData(data)\r\n        console.log(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSchedule();\r\n    }, []);\r\n\r\n    if (scheduleData?.payload.includes(300)) {\r\n        localStorage.removeItem(\"userData\");\r\n        document.cookie = \"PHPSESSID; expires=-1;\";\r\n        return <Navigate to=\"/strange-error\"/>\r\n    }\r\n\r\n    const arraySchedule = schedule.map(obj => ({\r\n        time: obj.time,\r\n        weekDay: obj.weekday || obj.weekDay,\r\n        subjectFirst: obj.subjectfirst || obj.subjectFirst,\r\n        groupNumber: obj.groupnumber || obj.groupNumber,\r\n        teacherFirst: obj.teacherfirst || obj.teacherFirst,\r\n        auditoryFirst: obj.auditoryfirst || obj.auditoryFirst,\r\n        subjectSecond: obj.subjectsecond || obj.subjectSecond,\r\n        teacherSecond: obj.teachersecond || obj.teacherSecond,\r\n        auditorySecond: obj.auditorysecond || obj.auditorySecond\r\n    }));\r\n\r\n    // дата и время\r\n\r\n    const date = new Date();\r\n\r\n    const dayNumber = date.getDay();\r\n\r\n    const days = [\r\n        \"Воскресенье\",\r\n        \"Понедельник\",\r\n        \"Вторник\",\r\n        \"Среда\",\r\n        \"Четверг\",\r\n        \"Пятница\",\r\n        \"Суббота\"\r\n    ];\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('userData');\r\n        axios.post('/logout.php').then(response => console.log(response));\r\n    }\r\n\r\n    // пасхалка\r\n\r\n    if (avaClicks === 100) {\r\n        console.log(\"ААААААААААААААААААААА ЧТООООООООООООООООООООООООООООО\")\r\n        return (\r\n            <img src={easterEgg} alt=\"ААААААААААААА ЧТОООООООООО\"/>\r\n        );\r\n    }\r\n\r\n    if (!isAuth) return <Navigate to=\"/login\"/>\r\n\r\n    return (\r\n        <>\r\n            <Loader loading={isLoading}/>\r\n            <div className=\"ProfilePage\">\r\n                <div className=\"container\">\r\n                    <div className=\"profile-block\">\r\n                        <div className=\"info-block\">\r\n                            <div className=\"cool-block\">\r\n                                <div className=\"user-info\">\r\n                                    <div className=\"user-info__text\">\r\n                                        <h3>\r\n                                            {userData.access === '0'\r\n                                                ? 'Админ'\r\n                                                : `студент ${userData.group} группы`}\r\n                                        </h3>\r\n                                        {userData.access === '0' && (\r\n                                            <Link to=\"/admin\">\r\n                                                <h3>Войти в админ панель</h3>\r\n                                            </Link>\r\n                                        )}\r\n                                        <h2\r\n                                            onClick={() => {\r\n                                                setAvaClicks(avaClicks + 1);\r\n                                                console.log('Нажми еще ', 1000 - avaClicks, ' раз');\r\n                                            }}\r\n                                        >\r\n                                            {userData.name} {userData.lastname}\r\n                                        </h2>\r\n                                        <h4>{userData.mail}</h4>\r\n                                        <Link to=\"/login\">\r\n                                            <h4\r\n                                                onClick={() => logOut()}\r\n                                                style={{color: '#FE6060'}}\r\n                                            >\r\n                                                Выйти\r\n                                            </h4>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {userData.access === '0' ? (\r\n                                <h3>\r\n                                    <Link to=\"/admin\" style={{color: '#1f1f1f'}}>\r\n                                        Войти в админ-панель\r\n                                    </Link>\r\n                                </h3>\r\n                            ) : (\r\n                                <>\r\n                                    <h1>Твое расписание</h1>\r\n                                    <Link to=\"/schedule\">\r\n                                        <button className=\"shadow-button\" style={{color: '#1f1f1f'}}>\r\n                                            Посмотреть полное расписание\r\n                                        </button>\r\n                                    </Link>\r\n                                    <div className=\"cool-block\">\r\n                                        <div className=\"your-schedule\">\r\n                                            {dayNumber !== 0 && dayNumber !== 6 && (\r\n                                                <>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            flexDirection: 'column',\r\n                                                            gap: '12px'\r\n                                                        }}\r\n                                                    >\r\n                                                        <h2>Сегодня</h2>\r\n                                                        {arraySchedule\r\n                                                            .filter(\r\n                                                                item =>\r\n                                                                    item.weekDay === days[dayNumber] &&\r\n                                                                    item.groupNumber === userData.group\r\n                                                            )\r\n                                                            .map(lesson => (\r\n                                                                <Lesson key={lesson.time} obj={lesson}/>\r\n                                                            ))}\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            flexDirection: 'column',\r\n                                                            gap: '12px'\r\n                                                        }}\r\n                                                    >\r\n                                                        {dayNumber + 1 !== 0 && dayNumber + 1 !== 6 ?\r\n                                                            <>\r\n                                                                <h2>Завтра</h2>\r\n                                                                {arraySchedule.filter(\r\n                                                                    item =>\r\n                                                                        item.weekDay === days[dayNumber + 1] &&\r\n                                                                        item.groupNumber === userData.group\r\n                                                                )\r\n                                                                    .map(lesson => (\r\n                                                                        <Lesson key={lesson.time} obj={lesson}/>\r\n                                                                    ))}\r\n                                                            </> : \"\"\r\n                                                        }\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\ScheduleEdit.jsx",["218","219","220","221","222","223"],[],"import \"./ScheduleEdit.css\";\r\nimport AdminMenu from \"./Components/AdminMenu/AdminMenu\";\r\nimport React, {useState} from \"react\";\r\nimport axios from \"../../axios\";\r\nimport Schedule from \"../Schedule/Schedule\";\r\nimport UploaderModal from \"./Components/UploaderModal/UploaderModal\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport NewElementsListModal from \"./Components/NewElementsListModal/NewElementsListModal\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nconst ScheduleEdit = () => {\r\n\r\n    const [subjectFirst, setSubjectFirst] = useState(\"\");\r\n    const [teacherFirst, setTeacherFirst] = useState(\"\");\r\n    const [teacherSecond, setTeacherSecond] = useState(\"\");\r\n    const [auditoryFirst, setAuditoryFirst] = useState(\"\");\r\n    const [auditorySecond, setAuditorySecond] = useState(\"\");\r\n    const [isNewElementsOpen, setIsNewElementsOpen] = useState(true);\r\n    const [prevLessons, setPrevLessons] = useState([]);\r\n    const [newLessons, setNewLessons] = useState([]);\r\n    const [newElements, setNewElements] = useState([\r\n        {\r\n            name: \"sdklfj\",\r\n            value: \"aslkjdfasd\"\r\n        }\r\n    ]);\r\n    const [fromCsv, setFromCsv] = useState(true);\r\n    const [updatedSchedule, setUpdatedSchedule] = useState();\r\n    const [schedule, setSchedule] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arraySchedule, setArraySchedule] = useState();\r\n\r\n    // поиск и получение расписания с бд\r\n\r\n    const search = async (inputs, radio, location) => {\r\n        const requestOptions = {\r\n            valueSearch: inputs,\r\n            valueRadioButton: radio,\r\n            valueLocation: location\r\n        };\r\n\r\n        try {\r\n            await axios.post('/schedule.php',\r\n                requestOptions\r\n            )\r\n                .then(response => {\r\n                    if (response.data !== \"Запрос не получил ни одного результата!\") {\r\n                        const data = response.data;\r\n                        setSchedule(data);\r\n                        setIsLoading(false);\r\n                    } else {\r\n                        search(\"\", \"\", 1);\r\n                    }\r\n                })\r\n        } catch (err) {\r\n            alert(\"Произошла странная ошибка\");\r\n        }\r\n    };\r\n\r\n    // обновление расписание с помощью csv файла\r\n\r\n    const [isFromCsv, setIsFromCsv] = useState(false);\r\n\r\n    const updateSchedule = (e) => {\r\n        e.preventDefault();\r\n        let files = [...e.dataTransfer.files];\r\n        const formData = new FormData();\r\n        formData.append('file', files[0]);\r\n\r\n        console.log(files[0])\r\n\r\n        if (files[0].type !== \"text/csv\")\r\n            alert(\"Неверный формат файла!\")\r\n        else\r\n            console.log(\"он пытается\")\r\n        axios.post('/newCsvFile.php', formData).then(response => {\r\n            let data = response.data;\r\n            console.log(response)\r\n            setIsFromCsv(true);\r\n            return setSchedule([...data[0], ...data[1], ...data[2], ...data[3], ...data[4]]);\r\n        }).catch(e => {\r\n            console.log(e)\r\n\r\n            if (!e.response.data.access) {\r\n                localStorage.removeItem(\"userData\");\r\n                document.cookie = \"PHPSESSID; expires=-1;\";\r\n                return <Navigate to=\"/strange-error\"/>\r\n            }\r\n        });\r\n}\r\n\r\n// Drag&Drop csv файла\r\n\r\nconst dragStartHandler = (e) => {\r\n    e.preventDefault();\r\n    setFromCsv(true);\r\n    setDrag(true);\r\n};\r\n\r\nconst dragLeaveHandler = (e) => {\r\n    e.preventDefault();\r\n    setFromCsv(false);\r\n    setDrag(false);\r\n};\r\n\r\nconst onDropHandler = (e) => {\r\n    setSchedule([]);\r\n    updateSchedule(e);\r\n    setFromCsv(false);\r\n    setUploaderShow(false);\r\n}\r\n\r\nconst [drag, setDrag] = useState(false);\r\nconst [uploaderShow, setUploaderShow] = useState(false);\r\n\r\nconst lesson = {\r\n    groupNumber: \"\",\r\n    time: \"\",\r\n    weekDay: \"\",\r\n    subjectFirst: subjectFirst,\r\n    teacherFirst: teacherFirst,\r\n    auditoryFirst: auditoryFirst,\r\n    subjectSecond: subjectFirst,\r\n    teacherSecond: teacherSecond,\r\n    auditorySecond: auditorySecond,\r\n    locationName: \"\"\r\n};\r\n\r\nconst [lessonAdding, setLessonAdding] = useState(false);\r\n\r\nconst [updatedLessons, setUpdatedLessons] = useState({\r\n    fromCsv: fromCsv,\r\n    prev: prevLessons,\r\n    new: newLessons,\r\n});\r\n\r\nconst userData = JSON.parse(window.localStorage.getItem('userData'))\r\nif (!userData) return <Navigate to=\"/something-wrong\"/>\r\nconst isAdmin = Boolean(userData.access === \"0\");\r\nif (!isAdmin) return <Navigate to=\"/something-wrong\"/>\r\n\r\nif (userData) return (\r\n    <div className=\"ScheduleEdit\"\r\n         onDragStart={() => {\r\n             setDrag(true);\r\n             setUploaderShow(true)\r\n         }}\r\n         onDragLeave={() => {\r\n             setDrag(false);\r\n             setUploaderShow(false);\r\n         }}\r\n         onDragOver={() => {\r\n             setDrag(true);\r\n             setUploaderShow(true)\r\n         }}\r\n    >\r\n        <UploaderModal\r\n            dragStartHandler={dragStartHandler}\r\n            dragLeaveHandler={dragLeaveHandler}\r\n            onDropHandler={onDropHandler}\r\n            setUploaderShow={setUploaderShow}\r\n            drag={drag}\r\n            uploaderShow={uploaderShow}\r\n            update={updateSchedule}\r\n        />\r\n\r\n        {/*<NewElementsListModal*/}\r\n        {/*    newElements={newElements}*/}\r\n        {/*    isNewElementsOpen={isNewElementsOpen}*/}\r\n        {/*    setIsNewElementsOpen={setIsNewElementsOpen}*/}\r\n        {/*/>*/}\r\n        <div className=\"admin-menu\">\r\n            <Loader loading={isLoading}/>\r\n            <AdminMenu\r\n                isFromCsv={isFromCsv}\r\n                uploaderShow={uploaderShow}\r\n                setUploaderShow={setUploaderShow}\r\n                setUpdatedSchedule={setUpdatedSchedule}\r\n                updatedSchedule={updatedSchedule}\r\n                updatedLessons={updatedLessons}\r\n                updateSchedule={updateSchedule}\r\n                arraySchedule={arraySchedule}\r\n                setSubjectFirst={setSubjectFirst}\r\n                setTeacherFirst={setTeacherFirst}\r\n                setTeacherSecond={setTeacherSecond}\r\n                setAuditoryFirst={setAuditoryFirst}\r\n                setAuditorySecond={setAuditorySecond}\r\n                setUpdatedLessons={setUpdatedLessons}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading}\r\n                lessonAdding={lessonAdding}\r\n                setLessonAdding={setLessonAdding}\r\n                isAdmin={isAdmin}\r\n                schedule={schedule}\r\n                setSchedule={setSchedule}\r\n                search={search}\r\n            />\r\n        </div>\r\n        <div className=\"schedule\">\r\n\r\n            {\r\n                schedule.length === 0 ?\r\n                    <div className=\"schedule-block\">\r\n                        <h3>Загрузить .csv файл с новым расписанием или вывести старое расписание из базы данных</h3>\r\n                        <button\r\n                            className=\"outlined-button\"\r\n                            onClick={() => {\r\n                                search(\"\", \"\", 1);\r\n                                setFromCsv(false);\r\n                            }}\r\n                        >\r\n                            Вывести старое расписание из базы данных\r\n                        </button>\r\n                        <button\r\n                            className=\"outlined-button\"\r\n                            onClick={() => {\r\n                                setUploaderShow(true);\r\n                                setFromCsv(true);\r\n                                console.log(fromCsv);\r\n                            }}\r\n                        >\r\n                            Загрузить новое расписание\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <button\r\n                            className=\"outlined-button\"\r\n                            onClick={() => {\r\n                                search(\"\", \"\", 1)\r\n                                setFromCsv(false);\r\n                            }}\r\n                        >\r\n                            Вывести старое расписание из базы данных\r\n                        </button>\r\n                        <Schedule\r\n                            fromCsv={fromCsv}\r\n                            setUpdatedLessons={setUpdatedLessons}\r\n                            updatedLessons={updatedLessons}\r\n                            prevLessons={prevLessons}\r\n                            newLessons={newLessons}\r\n                            setPrevLessons={setPrevLessons}\r\n                            setNewLessons={setNewLessons}\r\n                            lessonAdding={lessonAdding}\r\n                            lesson={lesson}\r\n                            isAdmin={isAdmin}\r\n                            schedule={schedule}\r\n                            search={search}\r\n                        />\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n;\r\n\r\nexport default ScheduleEdit;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ErrorPage\\ErrorPage.jsx",["224"],[],"import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport \"./ErrorPage.css\";\r\n\r\nconst ErrorPage = () => {\r\n\r\n    return (\r\n        <div className=\"ErrorPage\">\r\n            <h1>404</h1>\r\n            <h2>Страница не найдена</h2>\r\n            <Link to=\"/\" style={{color: \"#3D99A8\"}}>\r\n                Вернуться на домашнюю страницу\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\AdminPanel\\AdminPanel.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\axios.js",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Schedule.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\BurgerMenu\\BurgerMenu.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\Components\\AdminMenu\\AdminMenu.jsx",["225","226","227"],[],"import React, {useState} from 'react';\r\nimport \"./AdminMenu.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DropDownList from \"../../../../Components/DropDownList/DropDownList\";\r\nimport Switch from \"../../../../Components/Switch/Switch\";\r\nimport axios from \"../../../../axios\";\r\nimport {logout} from \"../../../../Redux/Slices/auth\";\r\nimport Notification from \"../../../../Components/Notification/Notification\";\r\n\r\n\r\nconst AdminMenu = ({\r\n                       uploaderShow,\r\n                       setUploaderShow,\r\n                       setSchedule,\r\n                       updatedLessons,\r\n                       schedule,\r\n                       search,\r\n                       lessonAdding,\r\n                       isLoading,\r\n                       setLessonAdding,\r\n                       subjectFirst,\r\n                       setSubjectFirst,\r\n                       teacherFirst,\r\n                       setTeacherFirst,\r\n                       teacherSecond,\r\n                       setTeacherSecond,\r\n                       auditoryFirst,\r\n                       setAuditoryFirst,\r\n                       auditorySecond,\r\n                       setAuditorySecond,\r\n                       setIsLoading,\r\n                       isFromCsv\r\n                   }) => {\r\n\r\n    const [notificationContent, setNotificationContent] = useState(\"\");\r\n    const [isNotificationVisible, setIsNotificationVisible] = useState(false);\r\n\r\n    const Alert = (content) => {\r\n        setIsNotificationVisible(true);\r\n        setNotificationContent(content)\r\n    }\r\n\r\n    const saveSchedule = async () => {\r\n\r\n\r\n        setIsLoading(true)\r\n        console.log(isLoading)\r\n\r\n        try {\r\n            const data = {fromCsv: updatedLessons.fromCsv, schedule}\r\n\r\n            if (updatedLessons.fromCsv)\r\n                axios.post(\"/saveSchedule.php\", {fromCsv: true, schedule: schedule}).then(response => {\r\n                    console.log(response)\r\n                    setIsLoading(false);\r\n                    Alert(\"Расписание обновлено\");\r\n                });\r\n\r\n            if (!updatedLessons.fromCsv)\r\n                axios.post(\"/saveSchedule.php\", updatedLessons).then(response => {\r\n                    console.log(JSON.parse(updatedLessons));\r\n                    console.log(response);\r\n                    console.log(444);\r\n                    setIsLoading(false);\r\n                    Alert(\"Расписание обновлено\");\r\n                });\r\n\r\n            setIsLoading(false);\r\n            Alert(\"Не удалось обновить расписание\");\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const [adminMenuShow, setAdminMenuShow] = useState(true);\r\n\r\n    const [isNewLesson, setIsNewLesson] = useState(false);\r\n\r\n    return (<div\r\n        className=\"AdminMenu\"\r\n        style={adminMenuShow ? {left: 0} : {left: \"-400px\"}}\r\n    >\r\n        <Notification setIsNotificationVisible={setIsNotificationVisible} isVisible={isNotificationVisible} content={notificationContent}/>\r\n        <div className=\"admin-menu__header\">\r\n            <h2>Редактор расписания</h2>\r\n            <Link to=\"/schedule-edit/tutorial\">\r\n                <div className=\"schedule-edit-tutorial__link\">\r\n                    ?\r\n                </div>\r\n            </Link>\r\n        </div>\r\n\r\n        {schedule ? <div className=\"lesson\">\r\n            <h3>Урок</h3>\r\n\r\n            <Switch\r\n                name=\"Новый урок\"\r\n                value={isNewLesson}\r\n                setValue={setIsNewLesson}\r\n            />\r\n\r\n            {!isNewLesson ? <>\r\n                <DropDownList\r\n                    value=\"Дисциплина: \"\r\n                    array={schedule.map(item => item.subjectfirst || item.subjectFirst)}\r\n                    setValue={setSubjectFirst}\r\n                />\r\n                <DropDownList\r\n                    value=\"Преподаватель первой подгруппы: \"\r\n                    array={schedule.map(item => item.teacherfirst || item.teacherFirst)}\r\n                    setValue={setTeacherFirst}\r\n                />\r\n                <DropDownList\r\n                    value=\"Преподаватель второй подгруппы: \"\r\n                    array={schedule.map(item => item.teachersecond || item.teacherSecond)}\r\n                    setValue={setTeacherSecond}\r\n                />\r\n                <DropDownList\r\n                    value=\"Аудитория первой подгруппы: \"\r\n                    array={schedule.map(item => item.auditoryfirst || item.auditoryFirst)}\r\n                    setValue={setAuditoryFirst}\r\n                />\r\n                <DropDownList\r\n                    value=\"Аудитория второй подгруппы: \"\r\n                    array={schedule.map(item => item.auditorysecond || item.auditorySecond)}\r\n                    setValue={setAuditorySecond}\r\n                />\r\n            </> : <>\r\n                <label>\r\n                    <span>Дисциплина: </span>\r\n                    <br/>\r\n                    <input\r\n                        value={subjectFirst}\r\n                        onChange={(e) => setSubjectFirst(e.target.value)} className=\"no-outline\"\r\n                        placeholder=\"Математика\"/>\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Преподаватель первой подгруппы: </span>\r\n                    <br/>\r\n                    <input\r\n                        value={teacherFirst}\r\n                        onChange={(e) => setTeacherFirst(e.target.value)} className=\"no-outline\"\r\n                        placeholder=\"Фамильев И.О.\"/>\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Преподаватель второй подгруппы: </span>\r\n                    <br/>\r\n                    <input\r\n                        value={teacherSecond}\r\n                        onChange={(e) => setTeacherSecond(e.target.value)} className=\"no-outline\"\r\n                        placeholder=\"Фамильев И.О.\"/>\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Аудитория первой подгруппы: </span>\r\n                    <br/>\r\n                    <input\r\n                        value={auditoryFirst}\r\n                        onChange={(e) => setAuditoryFirst(e.target.value)} className=\"no-outline\" placeholder=\"19\"/>\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Аудитория второй подгруппы: </span>\r\n                    <br/>\r\n                    <input\r\n                        value={auditorySecond}\r\n                        onChange={(e) => setAuditorySecond(e.target.value)} className=\"no-outline\" placeholder=\"21\"/>\r\n                </label>\r\n            </>}\r\n\r\n\r\n            <button\r\n                style={{\r\n                    width: \"100%\"\r\n                }}\r\n                className=\"outlined-button\"\r\n                onClick={() => setLessonAdding(!lessonAdding)}\r\n            >\r\n                {lessonAdding ? \"Чтобы добавить урок, нажмите на нужную ячейку в таблице\" : \"Добавить в расписание\"}\r\n            </button>\r\n        </div> : \"\"}\r\n\r\n        <div className=\"admin-menu__buttons\">\r\n            {!uploaderShow ? <button className=\"outlined-button\" onClick={() => setUploaderShow(true)}>\r\n                Загрузить файл Excel\r\n            </button> : \"\"}\r\n\r\n            <button\r\n                className=\"outlined-button\"\r\n                onClick={saveSchedule}\r\n                disabled={isLoading}\r\n            >\r\n                {isLoading ? \"Подождите\": \"Сохранить\"}\r\n            </button>\r\n        </div>\r\n\r\n        <button\r\n            className=\"outlined-button\"\r\n            onClick={() => {\r\n                setSchedule([]);\r\n                search(\"\", \"\", 1)\r\n            }}\r\n        >\r\n            Загрузить старое расписание\r\n        </button>\r\n    </div>);\r\n};\r\n\r\nexport default AdminMenu;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\AdminPanel\\Components\\Tab\\Tab.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Login\\Login.jsx",["228"],[],"import React, {useState} from 'react';\r\nimport './Login.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchAuth, selectIsAuth} from '../../Redux/Slices/auth';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {ReactComponent as Eye} from \"../../Icons/eye.svg\";\r\nimport {ReactComponent as XEye} from \"../../Icons/xEye.svg\";\r\n\r\nconst Login = () => {\r\n    const isAuth = useSelector(selectIsAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [passwordVisible, setPasswordVisible] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const auth = async (values) => {\r\n        if (login && password) {\r\n            try {\r\n                const response = await dispatch(fetchAuth(values));\r\n                setData(response);\r\n                localStorage.setItem('userData', JSON.stringify(response.payload.data))\r\n                setIsSubmitting(false);\r\n\r\n                if (response.error && response.error.message.includes('423')) {\r\n                    setError('Слишком много попыток, подождите');\r\n                } else if (response.error && response.error.message.includes('429')) {\r\n                    setError('Слишком много попыток, подождите');\r\n                } else if (response.error && response.error.message.includes('403')) {\r\n                    setError('Неверный логин или пароль');\r\n                } else {\r\n                    setError(\"\")\r\n                }\r\n            } catch (e) {\r\n                setIsSubmitting(false);\r\n\r\n                console.log(e)\r\n\r\n                if (e && e.message.includes('423')) {\r\n                    setError('Слишком много попыток, подождите');\r\n                } else if (e && e.message.includes('429')) {\r\n                    setError('Слишком много попыток, подождите');\r\n                } else if (e && e.message.includes('403')) {\r\n                    setError('Неверный логин или пароль');\r\n                } else {\r\n                    setError(\"Неверный логин или пароль\")\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!login.includes(\"@\")) {\r\n            setError(\"Введите почту\")\r\n            console.log(login)\r\n        } else if (password === \"\") {\r\n            console.log(password)\r\n            setError(\"Введите пароль\")\r\n        }\r\n        setIsSubmitting(true);\r\n        await auth({login, password});\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Navigate to=\"/\"/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <form className=\"Login\" onSubmit={handleSubmit}>\r\n                <div className=\"login-header\">\r\n                    <h2 className=\"login-title\">Авторизация</h2>\r\n                </div>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"login\"\r\n                    className=\"no-outline underlined-input\"\r\n                    placeholder=\"почта\"\r\n                    onChange={(e) => setLogin(e.target.value)}\r\n                    value={login}\r\n                    required\r\n                />\r\n\r\n                <label id=\"password\">\r\n                    <input\r\n                        type={passwordVisible ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        className=\"no-outline underlined-input\"\r\n                        placeholder=\"пароль\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        value={password}\r\n                        required\r\n                    />\r\n                    {passwordVisible ? <XEye onClick={() => setPasswordVisible(!passwordVisible)}/> : <Eye onClick={() => setPasswordVisible(!passwordVisible)}/>}\r\n                </label>\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"outlined-button login-button\"\r\n                    value={isSubmitting ? 'Загрузка...' : 'Войти'}\r\n                    disabled={isSubmitting || (!login && !(password.length >= 8))}\r\n                />\r\n            </form>\r\n\r\n            <p className=\"error-text\">{error}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Alert\\Alert.jsx",[],[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Redux\\storage.js",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Redux\\Slices\\schedule.js",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Redux\\Slices\\auth.js",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\StrangeError\\StrangeError.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\SchedulePage.jsx",["229"],[],"// Импорт компонентов и функций из других файлов и библиотек\r\nimport Schedule from \"./Schedule\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\nimport { fetchSchedule, selectSchedule } from \"../../Redux/Slices/schedule\";\r\nimport \"./SchedulePage.css\";\r\nimport axios from \"../../axios\";\r\nimport StrangeError from \"../../Components/StrangeError/StrangeError\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {selectIsAuth} from \"../../Redux/Slices/auth\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst SchedulePage = () => {\r\n    // Объявление переменных состояния и функций\r\n    const dispatch = useDispatch();\r\n    const schedule = useSelector(selectSchedule);\r\n\r\n    const isLoading = schedule.status === \"loading\";\r\n\r\n    // Функция поиска\r\n    const search = async (inputs, radio, location) => {\r\n        const requestOptions = {\r\n            valueSearch: inputs,\r\n            valueRadioButton: radio,\r\n            valueLocation: location,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(\"/schedule.php\", requestOptions);\r\n\r\n            // Если результат не пустой - обновить состояние с расписанием, иначе выполнить поиск еще раз\r\n            if (response.data !== \"Запрос не получил ни одного результата!\") {\r\n                return dispatch(fetchSchedule(response.data));\r\n            } else {\r\n                search(\"\", \"\", 1);\r\n            }\r\n\r\n        } catch (err) {\r\n            return <StrangeError/>\r\n        }\r\n    };\r\n\r\n    const isAuth = useSelector(selectIsAuth);\r\n\r\n    useEffect(() => {\r\n        search(\"\", \"\", 1).then(() => console.log(\"fdsf\"))\r\n    }, [])\r\n\r\n    if (!isAuth) return <Navigate to=\"/login\"/>\r\n\r\n    try {\r\n        return (\r\n            <div className=\"schedule-page\">\r\n                {!isLoading ? (\r\n                    <Schedule schedule={schedule} search={search} />\r\n                ) : (\r\n                    <Loader />\r\n                )}\r\n            </div>\r\n        )\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n};\r\n\r\nexport default SchedulePage;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\TeachersList\\TeachersList.jsx",["230"],[],"import React, {useEffect, useState} from 'react';\r\nimport \"./TeachersList.css\";\r\nimport Teacher from \"./Components/Teacher/Teacher\";\r\nimport axios from \"../../axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {selectIsAuth} from \"../../Redux/Slices/auth\";\r\n\r\nconst TeachersList = () => {\r\n    const isAuth = useSelector(selectIsAuth);\r\n\r\n    const [lessons, setLessons] = useState([]);\r\n\r\n    const search = async (inputs, radio, location) => {\r\n        const requestOptions = {\r\n            valueSearch: inputs,\r\n            valueRadioButton: radio,\r\n            valueLocation: location\r\n        };\r\n\r\n        try {\r\n            await axios.post('/schedule.php',\r\n                requestOptions\r\n            )\r\n                .then(response => {\r\n                    if(response.data !== \"Запрос не получил ни одного результата!\") {\r\n                        setLessons(response.data);\r\n                    } else {\r\n                        search(\"\", \"\", 1);\r\n                    }\r\n                })\r\n        }\r\n        catch (err) {\r\n            alert('Произошла странная ошибка')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        search(\"\", \"Location\", \"\");\r\n    }, []);\r\n\r\n\r\n    const teachers = [\r\n        {\r\n            name: \"Михаил\",\r\n            surname: \"Матанов\",\r\n            email: \"mmatanov@gmail.com\",\r\n            speciality: \"Математика\"\r\n        },\r\n        {\r\n            name: \"Роман\",\r\n            surname: \"Русский\",\r\n            email: \"rrusskiy@gmail.com\",\r\n            speciality: \"Русский язык и литература\"\r\n        },\r\n        {\r\n            name: \"Владимир\",\r\n            surname: \"Литературов\",\r\n            email: \"vliteraturov@gmail.com\",\r\n            speciality: \"Руссикй язык и литература\"\r\n        },\r\n        {\r\n            name: \"Харитон\",\r\n            surname: \"Трамвай\",\r\n            email: \"htram@gmail.com\",\r\n            speciality: \"Химия\"\r\n        }\r\n    ];\r\n\r\n    if (!isAuth) return <Navigate to=\"/login\"/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"teachers-list\">\r\n                <h1>Список преподавателей</h1>\r\n                <div className=\"list\">\r\n                    {teachers.map(obj => <Teacher obj={obj} lessons={lessons}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeachersList;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEditTutorial\\ScheduleEditTutorial.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Users.jsx",["231"],[],"import React, {useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport \"./Users.css\";\r\nimport User from \"./Components/User/User\";\r\nimport AutoComplete from \"../../Components/AutoComplete/AutoComplete\";\r\nimport DeleteModal from \"./Components/DeleteModal/DeleteModal\";\r\nimport CreateUserModal from \"./Components/CreateUserModal/CreateUserModal\";\r\n\r\nconst Users = () => {\r\n    const params = useParams();\r\n\r\n    const [users, setUsers] = useState([\r\n        {\r\n            name: \"Алексей\",\r\n            surname: \"Иванов\",\r\n            id: 123,\r\n            role: \"student\",\r\n            registrationTime: \"12.12.12 22:22\",\r\n            group: 29,\r\n            speciality: \"Информационные системы и программирование\"\r\n        },\r\n        {\r\n            name: \"Админ\",\r\n            surname: \"Админов\",\r\n            id: 1,\r\n            role: \"admin\",\r\n            registrationTime: \"12.12.12 22:22\",\r\n        },\r\n        {\r\n            name: \"Санек\",\r\n            surname: \"Пивнов\",\r\n            id: 143,\r\n            role: \"teacher\",\r\n            registrationTime: \"12.12.12 22:22\",\r\n            speciality: \"Математика\"\r\n        },\r\n        {\r\n            name: \"Леха\",\r\n            surname: \"Пивнов\",\r\n            id: 145,\r\n            role: \"teacher\",\r\n            registrationTime: \"12.12.12 22:22\",\r\n            speciality: \"Математика\"\r\n        },\r\n        {\r\n            name: \"Олег\",\r\n            surname: \"Пивнов\",\r\n            id: 144,\r\n            role: \"teacher\",\r\n            registrationTime: \"12.12.12 22:22\",\r\n            speciality: \"Математика\"\r\n        },\r\n        {\r\n            name: \"Диман\",\r\n            surname: \"Барбусеев\",\r\n            id: 125,\r\n            role: \"applicant\",\r\n            registrationTime: \"12.12.12 22:22\",\r\n        },\r\n    ]);\r\n\r\n    const [deleteModalInfo, setDeleteModalInfo] = useState({})\r\n    const [input, setInput] = useState(\"\");\r\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n    const [filteredUsers, setFilteredUsers] = useState(users);\r\n    const [isAutoCompleteVisible, setIsAutoCompleteVisible] = useState(false);\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"users-page\">\r\n            <div className=\"container\">\r\n                <CreateUserModal\r\n                    isVisible={isCreateModalOpen}\r\n                    setIsVisible={setIsCreateModalOpen}\r\n                />\r\n\r\n                <DeleteModal\r\n                    isVisible={isDeleteModalOpen}\r\n                    setIsVisible={setIsDeleteModalOpen}\r\n                    obj={deleteModalInfo}\r\n                />\r\n\r\n                <div className=\"users-header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/users/teachers\">\r\n                                <button\r\n                                    className=\"user-type__btn\"\r\n                                    style={params.type === \"teachers\" ? {\r\n                                        borderBottom: \"#3D99A8 3px solid\"\r\n                                    } : {}}\r\n                                >\r\n                                    Преподаватели\r\n                                </button>\r\n                            </Link>\r\n                            <Link to=\"/users/students\">\r\n                                <button\r\n                                    className=\"user-type__btn\"\r\n                                    style={params.type === \"students\" ? {\r\n                                        borderBottom: \"#3D99A8 3px solid\"\r\n                                    } : {}}\r\n                                >\r\n                                    Студенты\r\n                                </button>\r\n                            </Link>\r\n                            <Link to=\"/users/applicants\">\r\n                                <button\r\n                                    className=\"user-type__btn\"\r\n                                    style={params.type === \"applicants\" ? {\r\n                                        borderBottom: \"#3D99A8 3px solid\"\r\n                                    } : {}}\r\n                                >\r\n                                    Абитуриенты\r\n                                </button>\r\n                            </Link>\r\n                            <Link to=\"/users/admins\">\r\n                                <button\r\n                                    className=\"user-type__btn\"\r\n                                    style={params.type === \"admins\" ? {\r\n                                        borderBottom: \"#3D99A8 3px solid\"\r\n                                    } : {}}\r\n                                >\r\n                                    Админы\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <form\r\n                            className=\"search-block\"\r\n                            onSubmit={e => {\r\n                                e.preventDefault();\r\n                                setIsAutoCompleteVisible(false)\r\n                                setFilteredUsers(users.filter(item => {\r\n                                    return item.name.toString().toLowerCase().includes(input.toLowerCase())\r\n                                        || item.surname.toString().toLowerCase().includes(input.toLowerCase())\r\n                                        || item.id.toString().toLowerCase().includes(input.toLowerCase());\r\n                                }))\r\n                            }}\r\n                        >\r\n                            <AutoComplete\r\n                                isVisible={isAutoCompleteVisible}\r\n                                array={[\r\n                                    ...users.map(item => item.id.toString()),\r\n                                    ...users.map(item => item.name.toString()),\r\n                                    ...users.map(item => item.surname.toString()),\r\n                                ].filter(item => {\r\n                                    return item.toLowerCase().includes(input.toLowerCase());\r\n                                })}\r\n                                value={input}\r\n                                setInput={setInput}\r\n                            />\r\n\r\n                            <input\r\n                                placeholder=\"поиск\"\r\n                                className=\"search underlined-input no-outline\" type=\"text\" value={input}\r\n                                onChange={e => {\r\n                                    setInput(e.target.value);\r\n                                    if (input !== \"\") {\r\n                                        setIsAutoCompleteVisible(true)\r\n                                    } else {\r\n                                        setIsAutoCompleteVisible(false)\r\n                                    }\r\n                                }}/>\r\n\r\n                            <button\r\n                                className=\"outlined-button\"\r\n                                id=\"new-user__btn\"\r\n                                onClick={() => setIsCreateModalOpen(true)}\r\n                            >\r\n                                <h3>\r\n                                    Новый пользователь\r\n                                </h3>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"users-list\">\r\n                        {filteredUsers.filter(item => item.role === params.type.substr(0, params.type.length - 1)).map(obj =>\r\n                            <User\r\n                                setIsDeleteModalOpen={setIsDeleteModalOpen}\r\n                                obj={obj}\r\n                                setDeleteModalInfo={setDeleteModalInfo}\r\n                                isDeleteModalOpen={isDeleteModalOpen}\r\n                            />)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Loader\\Loader.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\AutoComplete\\AutoComplete.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Profile\\Components\\Lesson\\Lesson.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\TeachersList\\Components\\Teacher\\Teacher.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\Components\\UploaderModal\\UploaderModal.jsx",["232"],[],"import React, { useState } from 'react';\r\nimport {ReactComponent as UploadIcon} from \"../../../../Icons/UploadIcon.svg\";\r\nimport {ReactComponent as CloseIconWhite} from \"../../../../Icons/CloseIconWhite.svg\";\r\nimport \"./UploaderModal.css\";\r\n\r\nconst UploaderModal = (props) => {\r\n    const dragStartHandler = props.dragStartHandler;\r\n    const dragLeaveHandler = props.dragLeaveHandler;\r\n    const onDropHandler = props.onDropHandler;\r\n    const setUploaderShow = props.setUploaderShow;\r\n    const drag = props.drag;\r\n    const uploaderShow = props.uploaderShow;\r\n\r\n    return (\r\n        <div\r\n            className=\"background\"\r\n            style={uploaderShow ? {\r\n                display: \"flex\"\r\n            } : {\r\n                display: \"none\"\r\n            }}\r\n        >\r\n            <div\r\n                className=\"uploader\"\r\n                onDragStart = {e => dragStartHandler(e)}\r\n                onDragLeave = {e => dragLeaveHandler(e)}\r\n                onDragOver =  {e => dragStartHandler(e)}\r\n                onDrop = {e => onDropHandler(e)}\r\n            >\r\n                <button className=\"icon\" onClick={() => setUploaderShow(false)}>\r\n                    <CloseIconWhite/>\r\n                </button>\r\n                <div className=\"upload-info__block\">\r\n                    <UploadIcon className=\"upload-icon\"/>\r\n                    {!drag ?\r\n                        <h2>Перетащите .csv файл сюда</h2>\r\n                        :\r\n                        <h2>Отпустите .csv файл тут</h2>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploaderModal;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Components\\User\\User.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Components\\CreateUserModal\\CreateUserModal.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Users\\Components\\DeleteModal\\DeleteModal.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Components\\GroupsList\\GroupsList.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Components\\Search\\Search.jsx",["233"],[],"import React, {useState} from 'react';\r\nimport \"./Search.css\"\r\nimport AutoComplete from \"../../../../Components/AutoComplete/AutoComplete\";\r\n\r\nconst Search = (props) => {\r\n    const setInputs = props.setInputs;\r\n    const inputs = props.inputs;\r\n    const radioInputs = props.radioInputs;\r\n    const setRadioInputs = props.setRadioInputs;\r\n    const arraySchedule = props.arraySchedule;\r\n    const setTeacherSearching = props.setTeacherSearching;\r\n    const search = props.search;\r\n\r\n    const filteredSchedule = [\r\n        ...arraySchedule.map(item => item.groupNumber),\r\n        ...arraySchedule.map(item => item.teacherFirst),\r\n        ...arraySchedule.map(item => item.teacherSecond)\r\n    ].filter(item => {\r\n        return item?.toLowerCase().includes(inputs.toLowerCase());\r\n    });\r\n\r\n    console.log(filteredSchedule)\r\n\r\n    if (Number(inputs)) {\r\n        setRadioInputs(\"Group\");\r\n    } else {\r\n        setRadioInputs(\"Teacher\");\r\n    }\r\n\r\n    const [isAutoCompleteVisible, setIsAutoCompleteVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Search\">\r\n            <form className=\"search-block\" onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                if (radioInputs === \"Teacher\") {\r\n                    setTeacherSearching(true);\r\n                }\r\n\r\n                setInputs('');\r\n            }}>\r\n                <input placeholder=\"поиск\" className=\"search no-outline\" type=\"text\" value={inputs} onChange={e => {\r\n                    setInputs(e.target.value);\r\n                    if (inputs !== '') {\r\n                        setIsAutoCompleteVisible(true)\r\n                    } else {\r\n                        setIsAutoCompleteVisible(false)\r\n                    }\r\n\r\n                    if (radioInputs === '') {\r\n                        setRadioInputs(\"Group\")\r\n                    }\r\n                }}/>\r\n                <AutoComplete\r\n                    isVisible={inputs.length >= 3}\r\n                    array={filteredSchedule}\r\n                    value={inputs}\r\n                    setInput={setInputs}\r\n                />\r\n\r\n                <div>\r\n                    <select className=\"search\" name=\"Площадка\" id=\"Площадка\">\r\n                        <option>Площадка</option>\r\n                        {arraySchedule.map(obj => obj.locationName).reduce((a,b) => {\r\n                            if (a.indexOf(b) < 0 ) a.push(b);\r\n                            return a;\r\n                        }, []).map((item, index) =>\r\n                            <option onClick={async () => {\r\n                                await search(inputs, radioInputs, index + 1);\r\n                            }} value={item}>{item}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\DropDownList\\DropDownList.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\TeachersList\\Components\\TeacherLesson\\TeacherLesson.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\Schedule\\Components\\Cell\\Cell.jsx",["234","235","236","237"],[],"import React, {useState} from 'react';\r\nimport \"./Cell.css\"\r\n\r\nconst Cell = (props) => {\r\n    const fromCsv = props.fromCsv;\r\n    const [obj, setObj] = useState(props.obj);\r\n    const inputs = props.inputs;\r\n    const lessonAdding = props.lessonAdding;\r\n    const updatedLessons = props.updatedLessons\r\n    const setUpdatedLessons = props.setUpdatedLessons;\r\n    const setNewLessons = props.setNewLessons;\r\n    const newLessons = props.newLessons;\r\n    const setPrevLessons = props.setPrevLessons;\r\n    const prevLessons = props.prevLessons;\r\n    const lesson = props.lesson;\r\n\r\n    const [subjectShow, setSubjectShow] = useState(false);\r\n\r\n    // сокращение имен предметов\r\n\r\n    const shortSubject = subjectShow && obj.subjectFirst ?\r\n        obj.subjectFirst\r\n        :\r\n        <>\r\n            {\r\n                obj.subjectFirst?.includes(\"МДК\") ?\r\n                obj.subjectFirst?.substr(0, 10)\r\n                :\r\n                obj.subjectFirst?.includes(\"Иностранный язык\")\r\n                    ?\r\n                    \"Ин. Яз.\"\r\n                    :\r\n                    obj.subjectFirst?.includes(\"Физическая культура\")\r\n                        ?\r\n                        \"Физра\"\r\n                        :\r\n                        obj.subjectFirst?.includes(\"Основы безопасности жизнедеятельности\")\r\n                            ?\r\n                            \"ОБЖ\"\r\n                            :\r\n                            obj.subjectFirst?.length > 12\r\n                                ?\r\n                                obj.subjectFirst?.substr(0, 12) + \"...\"\r\n                                :\r\n                                obj.subjectFirst\r\n            }\r\n        </>\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <div\r\n                className=\"cell\"\r\n                onClick={() => {\r\n                    if (lessonAdding) {\r\n\r\n                        setPrevLessons(prevLessons => [obj, ...prevLessons]);\r\n                        setNewLessons(newLessons => [{\r\n                            groupNumber: obj.groupNumber,\r\n                            time: obj.time,\r\n                            weekDay: obj.weekDay,\r\n                            subjectFirst: lesson.subjectFirst,\r\n                            teacherFirst: lesson.teacherFirst,\r\n                            auditoryFirst: lesson.auditoryFirst,\r\n                            subjectSecond: lesson.subjectSecond,\r\n                            teacherSecond: lesson.teacherSecond,\r\n                            auditorySecond: lesson.auditorySecond,\r\n                            locationName: obj.locationName,\r\n                        }, ...newLessons]);\r\n\r\n                        setUpdatedLessons({\r\n                            fromCsv: fromCsv,\r\n                            new: newLessons,\r\n                            prev: prevLessons\r\n                        })\r\n\r\n                        console.log(updatedLessons);\r\n                        setObj({\r\n                            groupNumber: obj.groupNumber,\r\n                            time: obj.time,\r\n                            weekDay: obj.weekDay,\r\n                            subjectFirst: lesson.subjectFirst,\r\n                            teacherFirst: lesson.teacherFirst,\r\n                            auditoryFirst: lesson.auditoryFirst,\r\n                            subjectSecond: lesson.subjectSecond,\r\n                            teacherSecond: lesson.teacherSecond,\r\n                            auditorySecond: lesson.auditorySecond,\r\n                            locationName: obj.locationName,\r\n                        })\r\n                    }\r\n                }}\r\n                style={obj.teacherFirst?.toLowerCase().includes(inputs.toLowerCase())\r\n                && inputs.length >= 3\r\n                || obj.subjectFirst?.toLowerCase().includes(inputs.toLowerCase())\r\n                && inputs.length >= 3 ?\r\n                    {\r\n\r\n                } : inputs.length < 3 ? {\r\n\r\n                }\r\n                    :\r\n                {\r\n                    filter: \"opacity(0.5)\"\r\n                }}\r\n            >\r\n                <div className=\"main-info\">\r\n                    <abbr title=\"Номер урока\">\r\n                        <h4>\r\n                            {\r\n                                obj.time.includes(\"9:00\") ? 1\r\n                                : obj.time.includes(\"10:00\") ? 2\r\n                                : obj.time.includes(\"11:00\") ? 3\r\n                                : obj.time.includes(\"12:00\") ? 4\r\n                                : obj.time.includes(\"13:05\") ? 5\r\n                                : obj.time.includes(\"14:10\") ? 6\r\n                                : obj.time.includes(\"15:05\") ? 7\r\n                                : obj.time.includes(\"15:55\") ? 8\r\n                                : \"\"\r\n                            }\r\n                        </h4>\r\n                    </abbr>\r\n\r\n                    <abbr title=\"Урок\">\r\n                        <h2\r\n                        className=\"subject\"\r\n                        onClick={() => setSubjectShow(!subjectShow)}\r\n                        >\r\n                            {shortSubject}\r\n                        </h2>\r\n                    </abbr>\r\n\r\n                </div>\r\n\r\n                {obj.subjectSecond ?\r\n                        <div className=\"extra-info\">\r\n                            <p\r\n                                className=\"teacher\"\r\n                            >\r\n                                {obj.teacherFirst}\r\n                            </p>\r\n                            <p className=\"auditory\">\r\n                                {obj.auditoryFirst}\r\n                            </p>\r\n                            <p\r\n                                className=\"teacher\"\r\n                            >\r\n                                {obj.teacherSecond}\r\n                            </p>\r\n                            <p className=\"auditory\">\r\n                                {obj.auditorySecond}\r\n                            </p>\r\n                        </div>\r\n                        :\r\n                        <div className=\"extra-info\">\r\n                            <p\r\n                                className=\"teacher\"\r\n                            >\r\n                                {obj.teacherFirst}\r\n                            </p>\r\n\r\n                            <p className=\"auditory\">\r\n                                {obj.auditoryFirst}\r\n                            </p>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Cell;","C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Switch\\Switch.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Pages\\ScheduleEdit\\Components\\NewElementsListModal\\NewElementsListModal.jsx",[],[],"C:\\Users\\Gnida\\metrostroy-college-website\\metrostroy-college-website\\Client\\src\\Components\\Notification\\Notification.jsx",["238"],[],"import React, {useState} from 'react';\r\nimport \"./Notification.css\";\r\n\r\nconst Notification = ({isVisible, setIsNotificationVisible, content}) => {\r\n\r\n\r\n    if (isVisible) {\r\n        console.log(1)\r\n        setTimeout(() => {\r\n            console.log(2)\r\n            setIsNotificationVisible(false);\r\n        }, 3000)\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => setIsNotificationVisible(false)} className=\"Notification\" style={isVisible ? {right: \"12px\"} : {right: \"-100vw\"}}>\r\n            <h2>{content}</h2>\r\n            <div className=\"notification__loading\" style={isVisible ? {width: 0} : {width: \"100%\"}}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;",{"ruleId":"239","severity":1,"message":"240","line":27,"column":8,"nodeType":"241","endLine":27,"endColumn":10,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":9,"column":15,"nodeType":"245","messageId":"246","endLine":9,"endColumn":23},{"ruleId":"243","severity":1,"message":"247","line":18,"column":12,"nodeType":"245","messageId":"246","endLine":18,"endColumn":17},{"ruleId":"243","severity":1,"message":"248","line":18,"column":19,"nodeType":"245","messageId":"246","endLine":18,"endColumn":27},{"ruleId":"239","severity":1,"message":"249","line":40,"column":8,"nodeType":"241","endLine":40,"endColumn":10,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"251","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":28},{"ruleId":"243","severity":1,"message":"252","line":18,"column":12,"nodeType":"245","messageId":"246","endLine":18,"endColumn":29},{"ruleId":"243","severity":1,"message":"253","line":18,"column":31,"nodeType":"245","messageId":"246","endLine":18,"endColumn":51},{"ruleId":"243","severity":1,"message":"254","line":21,"column":12,"nodeType":"245","messageId":"246","endLine":21,"endColumn":23},{"ruleId":"243","severity":1,"message":"255","line":21,"column":25,"nodeType":"245","messageId":"246","endLine":21,"endColumn":39},{"ruleId":"243","severity":1,"message":"256","line":31,"column":27,"nodeType":"245","messageId":"246","endLine":31,"endColumn":43},{"ruleId":"243","severity":1,"message":"257","line":2,"column":15,"nodeType":"245","messageId":"246","endLine":2,"endColumn":26},{"ruleId":"243","severity":1,"message":"258","line":7,"column":9,"nodeType":"245","messageId":"246","endLine":7,"endColumn":15},{"ruleId":"243","severity":1,"message":"259","line":50,"column":19,"nodeType":"245","messageId":"246","endLine":50,"endColumn":23},{"ruleId":"243","severity":1,"message":"260","line":76,"column":27,"nodeType":"245","messageId":"246","endLine":76,"endColumn":43},{"ruleId":"243","severity":1,"message":"259","line":14,"column":12,"nodeType":"245","messageId":"246","endLine":14,"endColumn":16},{"ruleId":"239","severity":1,"message":"261","line":47,"column":8,"nodeType":"241","endLine":47,"endColumn":10,"suggestions":"262"},{"ruleId":"239","severity":1,"message":"261","line":40,"column":8,"nodeType":"241","endLine":40,"endColumn":10,"suggestions":"263"},{"ruleId":"243","severity":1,"message":"264","line":12,"column":19,"nodeType":"245","messageId":"246","endLine":12,"endColumn":27},{"ruleId":"243","severity":1,"message":"265","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"266","line":30,"column":12,"nodeType":"245","messageId":"246","endLine":30,"endColumn":33},{"ruleId":"267","severity":1,"message":"268","line":93,"column":17,"nodeType":"269","messageId":"270","endLine":93,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":94,"column":17,"nodeType":"269","messageId":"270","endLine":94,"endColumn":19},{"ruleId":"267","severity":1,"message":"271","line":94,"column":17,"nodeType":"269","messageId":"270","endLine":94,"endColumn":19},{"ruleId":"267","severity":1,"message":"271","line":95,"column":17,"nodeType":"269","messageId":"270","endLine":95,"endColumn":19},{"ruleId":"243","severity":1,"message":"265","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["272"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSchedule'. Either include it or remove the dependency array.",["273"],"'NewElementsListModal' is defined but never used.","'isNewElementsOpen' is assigned a value but never used.","'setIsNewElementsOpen' is assigned a value but never used.","'newElements' is assigned a value but never used.","'setNewElements' is assigned a value but never used.","'setArraySchedule' is assigned a value but never used.","'useNavigate' is defined but never used.","'logout' is defined but never used.","'data' is assigned a value but never used.","'setAdminMenuShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["274"],["275"],"'setUsers' is assigned a value but never used.","'useState' is defined but never used.","'isAutoCompleteVisible' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},"Update the dependencies array to be: [userData]",{"range":"283","text":"284"},"Update the dependencies array to be: [getSchedule]",{"range":"285","text":"286"},"Update the dependencies array to be: [search]",{"range":"287","text":"288"},{"range":"289","text":"288"},[1006,1008],"[userData]",[1406,1408],"[getSchedule]",[1666,1668],"[search]",[1226,1228]]